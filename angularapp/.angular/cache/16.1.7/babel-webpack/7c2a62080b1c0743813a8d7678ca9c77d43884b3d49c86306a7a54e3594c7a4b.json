{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./forexConverter.pipe\";\nclass AppComponent {\n  constructor(forex) {\n    this.forex = forex;\n    this.fromCurrency = '1.126735';\n    this.toCurrency = '1.126735';\n    this.amount = '0';\n  }\n  /*convert() {\n    this.result = this.forex.transform(this.amount,this.fromCurrency,this.toCurrency);\n  }*/\n  convert() {\n    if (this.amount == '0') {\n      this.result = this.forex.transform(this.amount, this.fromCurrency, this.toCurrency);\n    } else {\n      this.result = Number(this.amount) > 0 ? this.amount : null;\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.forexConverter));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 1,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"\\nhi\");\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["AppComponent","constructor","forex","fromCurrency","toCurrency","amount","convert","result","transform","Number","i0","ɵɵdirectiveInject","i1","forexConverter","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵtext"],"sources":["/home/coder/project/workspace/angularapp/src/app/app.component.ts","/home/coder/project/workspace/angularapp/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { forexConverter } from './forexConverter.pipe';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  fromCurrency: string = '1.126735';\n  toCurrency: string = '1.126735';\n  amount: string = '0';\n  result: string | null | undefined;\n\n  constructor(private forex: forexConverter){}\n\n  /*convert() {\n    this.result = this.forex.transform(this.amount,this.fromCurrency,this.toCurrency);\n  }*/\n\n  convert() {\n    if(this.amount=='0'){\n      this.result = this.forex.transform(this.amount,this.fromCurrency,this.toCurrency);\n    }\n    else{\n      this.result = Number(this.amount) > 0 ? this.amount : null;\n    }\n    \n  }\n}\n","<!--<h2>Forex Converter</h2>\n<form>\n  <label for=\"fromCurrency\">Source CCY:</label>\n  <select id=\"fromCurrency\" name=\"fromCurrency\" [(ngModel)]=\"fromCurrency\">\n    <option id=\"fromCurrency\" value=\"1.126735\">USD</option>\n    <option id=\"fromCurrency\" value=\"0.876893\">GBP</option>\n    <option id=\"fromCurrency\" value=\"79.677056\">INR</option>\n  </select>\n\n  <label for=\"toCurrency\">Target CCY:</label>\n  <select id=\"toCurrency\" name=\"toCurrency\" [(ngModel)]=\"toCurrency\">\n    <option id=\"toCurrency\" value=\"1.126735\">USD</option>\n    <option id=\"toCurrency\" value=\"0.876893\">GBP</option>\n    <option id=\"toCurrency\" value=\"79.677056\">INR</option>\n  </select>\n\n  <label for=\"amount\">Amount(Rs):</label>\n  <input type=\"text\" id=\"amount\" name=\"amount\" [(ngModel)]=\"amount\">\n\n  <button type=\"button\" id=\"submitButton\" (click)=\"convert()\">Convert</button>\n</form>\n\n<div *ngIf=\"result\" id=\"result\">\n  <div id=\"resValue\" [innerHTML]=\"result | forexConverter: fromCurrency: toCurrency \"></div>\n</div>\n-->\nhi"],"mappings":";;AAGA,MAKaA,YAAY;EAMvBC,YAAoBC,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;IALzB,KAAAC,YAAY,GAAW,UAAU;IACjC,KAAAC,UAAU,GAAW,UAAU;IAC/B,KAAAC,MAAM,GAAW,GAAG;EAGuB;EAE3C;;;EAIAC,OAAOA,CAAA;IACL,IAAG,IAAI,CAACD,MAAM,IAAE,GAAG,EAAC;MAClB,IAAI,CAACE,MAAM,GAAG,IAAI,CAACL,KAAK,CAACM,SAAS,CAAC,IAAI,CAACH,MAAM,EAAC,IAAI,CAACF,YAAY,EAAC,IAAI,CAACC,UAAU,CAAC;KAClF,MACG;MACF,IAAI,CAACG,MAAM,GAAGE,MAAM,CAAC,IAAI,CAACJ,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAACA,MAAM,GAAG,IAAI;;EAG9D;;AApBWL,YAAY,C;mBAAZA,YAAY,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAZb,YAAY,C;QAAZA,YAAY;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCkBzBT,EAAA,CAAAW,MAAA,WAAE;;;;;SDlBWrB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}